---@alias SyntaxType 'NONE' | 'error' | 'warning' | 'info' | 'declarative' | 'text' | 'func' | 'property' | 'primitive' | 'type' | 'digit' | 'parameter' | 'comment' | 'variable' | 'instanceReference' | 'logical' | 'operator' | 'background' | 'panelBackground'
---@alias Palette { git: GitPalette, name: string, text: string, declarative: string, func: string, digit: string, primitive: string, property: string, operator: string, variable: string, logical: string, parameter: string, instanceReference: string, type: string, comment: string }
---@alias ThemeName 'light' | 'light_bold' | 'light_italic' | 'light_italic_bold' | 'dark' | 'dark_bold' | 'dark_italic' | 'dark_italic_bold'
---@alias Theme table<ThemeName, Palette>
---@alias Selector fun(palette: Palette, as: SyntaxType): TokenStyle
---@alias Import fun(self, h: StaticImporter): HighlightRegistrationWithFunction
---@alias StaticImporter fun(h: HighlightRegistrationWithFunction)
---@alias MapSyntax fun(self, syntax: SyntaxType, group: string | string[], selector?: Selector): HighlightRegistrationWithFunction
---@alias HighlightCreator fun(self, palette: Palette): table<string, TokenStyle>
---@alias MapDarkOrLight fun(self, color: string, group: string | string[], func?: fun(color: string, dark: boolean): TokenStyle): HighlightRegistrationWithFunction
---@alias HighlightRegistartion table<SyntaxType, { group: string, selector?: Selector }[]>
---@alias HighlightRegistrationWithFunction { map: MapSyntax, with: Import, highlight_groups: HighlightCreator, map_dark: MapDarkOrLight, map_light: MapDarkOrLight }
---@alias GitPalette { diffAdded: string, diffDeleted: string, diffModified: string, stagedAdded: string, ignored: string, renamed: string, stagedDeleted: string, stagedModified: string, untracked: string }
---@class TokenStyle
---@field fg? string #RRGGBB
---@field bg? string #RRGGBB
---@field sp? string #RRGGBB
---@field blend? integer 1 to 100
---@field bold? boolean
---@field standout? boolean
---@field underline? boolean
---@field undercurl? boolean
---@field underdouble? boolean
---@field underdotted? boolean
---@field underdashed? boolean
---@field strikethrough? boolean
---@field italic? boolean
---@field reverse? boolean
---@field nocombine? boolean
---@field link? string
---@field default? {}
---@field ctermfg? string
---@field ctermbg? string
---@field cterm? {}
---@field force? boolean if true force update the highlight group when it exists.
---@field altfont? boolean enable alternative font in nvim 0.9
