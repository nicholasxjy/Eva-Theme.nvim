local state = vim.fn.stdpath('state')
local M = {
  cache_folder = vim.fs.joinpath(type(state) == 'string' and state or state[1], 'Eva-Theme'),
}
local _option_cache = vim.fs.joinpath(M.cache_folder, '_eva_config_cache.lua')
local _colo_cache = vim.fs.joinpath(M.cache_folder, '_eva_colo_cache.lua')

if vim.fn.isdirectory(M.cache_folder) == 0 then
  vim.fn.mkdir(M.cache_folder, 'p')
end

---@type ThemeName[]
local themes = {
  'dark',
  'light',
  'dark_bold',
  'light_bold',
  'dark_italic',
  'light_italic',
  'dark_italic_bold',
  'light_italic_bold',
}

---telling whether needs recompile
---@return boolean
M.needs_compile = function()
  if vim.fn.filereadable(_option_cache) == 0 then
    return true
  end
  local f = loadfile(_option_cache)
  local cache
  if f then
    cache = f()--[[@as Options]]
  end
  local current = {
    user_highlights = {},
    ---TODO: should handle paths generated by different package managers
    ---currently only handles lazy.nvim
    ---and it requires external git, I do think git is every neovim user will have but for now I just leave it

    -- commit = vim.trim(
    --   vim.fn.system(('git -C %s log -1 --format="%%H"'):format('~/.local/share/nvim/lazy/Eva-Theme.nvim/'))
    --   -- vim.fn.system(('git -C %s log -1 --format="%%H"'):format('~/desktop/Eva-Theme.nvim'))
    -- ),
  }

  for _, variant in ipairs(themes) do
    local palette = require('Eva-Theme.palette'):from_variant(variant)
    local current_user_highlights = require('Eva-Theme.options'):user_highlights(palette)
    current.user_highlights[palette.name] = current_user_highlights
  end

  current.user_palette = require('Eva-Theme.options').option.override_palette

  return not vim.deep_equal(current, cache)
end

---compile cache of user config
M.option = function()
  vim.notify('Eva-Theme: Compiling user config...')
  local cache = {
    user_highlights = {},

    ---TODO: should handle paths generated by different package managers
    ---currently only handles lazy.nvim
    ---and it requires external git, I do think git is every neovim user will have but for now I just leave it

    -- commit = vim.trim(
    --   vim.fn.system(('git -C %s log -1 --format="%%H"'):format('~/.local/share/nvim/lazy/Eva-Theme.nvim/'))
    --   -- vim.fn.system(('git -C %s log -1 --format="%%H"'):format('~/desktop/Eva-Theme.nvim'))
    -- ),
  }

  for _, variant in ipairs(themes) do
    local palette = require('Eva-Theme.palette'):from_variant(variant)
    local current_user_highlights = require('Eva-Theme.options'):user_highlights(palette)
    cache.user_highlights[palette.name] = current_user_highlights
  end

  cache.user_palette = require('Eva-Theme.options').option.override_palette
  local f, err = io.open(_option_cache, 'w')
  if f then
    f:write('return ' .. vim.inspect(cache))
    f:close()
  else
    vim.notify(err --[[@as string]], vim.log.levels.ERROR)
  end
  vim.notify('Eva-Theme: User config compiled.')
end

---compile all variants into a table stores in a lua file
M.colo = function()
  vim.notify('Eva-Theme: Compiling highlights...')
  local all = {}
  local Palette = require('Eva-Theme.palette')
  local registration = require('Eva-Theme.highlight_registration')
  for _, variant in pairs(themes) do
    local user_palette = Palette:from_variant(variant)
    local highlights = vim.tbl_extend(
      'force',
      registration:highlight_groups(user_palette),
      require('Eva-Theme.options'):user_highlights(user_palette)
    )
    all[variant] = highlights
  end
  local f, err = io.open(_colo_cache, 'w')
  if f then
    f:write('return ' .. vim.inspect(all))
    f:close()
  else
    vim.notify(err --[[@as string]], vim.log.levels.ERROR)
  end

  vim.notify('Eva-Theme: Highlights compiled.')
end

---returns highlights of a variant
---@param variant ThemeName
---@return table
M.colo_cache = function(variant)
  local f = loadfile(_colo_cache)
  if f then
    return f()[variant]
  else
    vim.notify('Eva-Theme: colorscheme cache not found', vim.log.levels.ERROR)
    return {}
  end
end

return M
